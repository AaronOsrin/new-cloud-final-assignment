name: assignment3
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build the Docker Image
        run: |
          docker build -t bookclub-api . && echo "image successfully built" >> log.txt || (echo "image not able to be built" >> log.txt && exit 1)
          docker save bookclub-api -o bookclub-api-image.tar
      - name: Upload Image to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: bookclub-api-image
          path: bookclub-api-image.tar
  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      db:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Docker Image
        uses: actions/download-artifact@v2
        with:
          name: bookclub-api-image
          path: .
      - name: Load Docker Image
        run: docker load --input bookclub-api-image.tar
      - name: Clean up Docker environment
        run: |
          docker ps -q | xargs -r docker stop
          docker ps -a -q | xargs -r docker rm
          docker network prune -f || true
      - name: Start Docker Compose
        run: docker-compose up -d
      - name: Install dependencies
        run: pip install pytest requests
      - name: Wait for services to be ready
        run: |
          until curl -s http://localhost:5001; do
            echo "Waiting for web service..."
            sleep 5
          done
      - name: Run tests
        run: pytest -v tests/assn3_tests.py > assn3_test_results.txt
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: assn3_test_results.txt
          path: assn3_test_results.txt
  query:
    runs-on: ubuntu-latest
    needs: test
    services:
      db:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Docker Image
        uses: actions/download-artifact@v2
        with:
          name: bookclub-api-image
          path: .
      - name: Load Docker Image
        run: docker load --input bookclub-api-image.tar
      - name: Clean up Docker environment
        run: |
          docker ps -q | xargs -r docker stop
          docker ps -a -q | xargs -r docker rm
          docker network prune -f || true
      - name: Start Docker Compose
        run: docker-compose up -d
      - name: Wait for web service to be ready
        run: |
          until curl -s http://localhost:5001; do
            echo "Waiting for web service..."
            sleep 5
          done
      - name: Check if query.txt exists
        run: |
          if [ ! -f query.txt ]; then
            echo "query.txt not found" && exit 1
          fi
      - name: Read and execute queries
        run: |
          while IFS= read -r line; do
            echo "Executing query for: $line"
            response=$(curl -s "http://localhost:5001$line")
            echo "query: $line" >> response.txt
            echo "response: $response" >> response.txt
            echo "" >> response.txt
          done < query.txt
      - name: Upload query results
        uses: actions/upload-artifact@v2
        with:
          name: response.txt
          path: response.txt
